{"ast":null,"code":"var _jsxFileName = \"/Users/joshuabrown/Documents/Code/timezone-chrome-extension/timezone-ext/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  let today = new Date();\n  let easternHours = today.getUTCHours() - 4;\n\n  if (easternHours < 0) {\n    easternHours += 24;\n  }\n\n  let easternMinutes = today.getUTCMinutes();\n\n  if (easternMinutes < 10) {\n    easternMinutes = \"0\".concat(easternMinutes);\n  }\n\n  let currentTimeEastern;\n\n  if (easternHours > 12) {\n    currentTimeEastern = \"Current Eastern time \".concat(easternHours - 12, \":\").concat(easternMinutes, \" PM\");\n  } else {\n    currentTimeEastern = \"Current Eastern time \".concat(easternHours, \":\").concat(easternMinutes, \" AM\");\n  }\n\n  console.log(currentTimeEastern);\n  let centralHours = today.getUTCHours() - 5;\n\n  if (centralHours < 0) {\n    centralHours += 24;\n  }\n\n  let centralMinutes = today.getUTCMinutes();\n\n  if (centralMinutes < 10) {\n    centralMinutes = \"0\".concat(centralMinutes);\n  }\n\n  let currentTimeCentral;\n\n  if (centralHours > 12) {\n    currentTimeCentral = \"Current Central time \".concat(centralHours - 12, \":\").concat(centralMinutes, \" PM\");\n  } else {\n    currentTimeCentral = \"Current Central time \".concat(centralHours, \":\").concat(centralMinutes, \" AM\");\n  }\n\n  console.log(currentTimeCentral);\n  let pacificHours = today.getUTCHours() - 7;\n\n  if (pacificHours < 0) {\n    pacificHours += 24;\n  }\n\n  let pacificMinutes = today.getUTCMinutes();\n\n  if (pacificMinutes < 10) {\n    pacificMinutes = \"0\".concat(pacificMinutes);\n  }\n\n  let currentTimePacific;\n\n  if (pacificHours > 12) {\n    currentTimePacific = \"Current Pacific time \".concat(pacificHours - 12, \":\").concat(pacificMinutes, \" PM\");\n  } else {\n    currentTimePacific = \"Current Pacific time \".concat(pacificHours, \":\").concat(pacificMinutes, \" AM\");\n  }\n\n  console.log(currentTimePacific);\n  let year = new Date().getFullYear(); //second sunday in march\n\n  let daylightOnMonth = 2;\n  let firstSundayDSTOn, secondSundayDSTOn; //console.log(new Date(year, daylightOnMonth, 1).getDay());\n\n  for (let i = 1; i < 8; i++) {\n    var day = new Date(year, daylightOnMonth, i).getDay(); //console.log(day);\n\n    if (day === 0) {\n      firstSundayDSTOn = i;\n    }\n  }\n\n  secondSundayDSTOn = firstSundayDSTOn + 7;\n  let daylightSavingDate = new Date(year, daylightOnMonth, secondSundayDSTOn);\n  console.log(daylightSavingDate); //first sunday in november\n\n  let daylightOffMonth = 10;\n  let firstSundayDSTOff;\n\n  for (let i = 1; i < 8; i++) {\n    var day = new Date(year, daylightOnMonth, i).getDay(); //console.log(day);\n\n    if (day === 0) {\n      firstSundayDSTOff = i;\n    }\n  }\n\n  let daylightSavingEndDate = new Date(year, daylightOnMonth, firstSundayDSTOff);\n  console.log(daylightSavingEndDate);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, currentTimeEastern), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, currentTimeCentral), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, currentTimePacific)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joshuabrown/Documents/Code/timezone-chrome-extension/timezone-ext/src/App.js"],"names":["React","App","today","Date","easternHours","getUTCHours","easternMinutes","getUTCMinutes","currentTimeEastern","console","log","centralHours","centralMinutes","currentTimeCentral","pacificHours","pacificMinutes","currentTimePacific","year","getFullYear","daylightOnMonth","firstSundayDSTOn","secondSundayDSTOn","i","day","getDay","daylightSavingDate","daylightOffMonth","firstSundayDSTOff","daylightSavingEndDate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  let today = new Date();\n\n  let easternHours = today.getUTCHours()-4;\n  if(easternHours < 0){\n    easternHours += 24;\n  }\n  let easternMinutes = today.getUTCMinutes();\n  if(easternMinutes < 10){\n    easternMinutes = `0${easternMinutes}`;\n  }\n  let currentTimeEastern;\n  if (easternHours > 12) {\n    currentTimeEastern = `Current Eastern time ${easternHours-12}:${easternMinutes} PM`;\n  } else {\n    currentTimeEastern = `Current Eastern time ${easternHours}:${easternMinutes} AM`;\n  }\n  console.log(currentTimeEastern);\n\n  let centralHours = today.getUTCHours()-5;\n  if(centralHours < 0){\n    centralHours += 24;\n  }\n  let centralMinutes = today.getUTCMinutes();\n  if(centralMinutes < 10){\n    centralMinutes = `0${centralMinutes}`;\n  }\n  let currentTimeCentral;\n  if (centralHours > 12) {\n    currentTimeCentral = `Current Central time ${centralHours-12}:${centralMinutes} PM`;\n  } else {\n    currentTimeCentral = `Current Central time ${centralHours}:${centralMinutes} AM`;\n  }\n  console.log(currentTimeCentral);\n\n  let pacificHours = today.getUTCHours()-7;\n  if(pacificHours < 0){\n    pacificHours += 24;\n  }\n  let pacificMinutes = today.getUTCMinutes();\n  if(pacificMinutes < 10){\n    pacificMinutes = `0${pacificMinutes}`;\n  }\n  let currentTimePacific;\n  if (pacificHours > 12) {\n    currentTimePacific = `Current Pacific time ${pacificHours-12}:${pacificMinutes} PM`;\n  } else {\n    currentTimePacific = `Current Pacific time ${pacificHours}:${pacificMinutes} AM`;\n  }\n  console.log(currentTimePacific);\n\n  let year = new Date().getFullYear();\n  //second sunday in march\n  let daylightOnMonth = 2;\n  let firstSundayDSTOn, secondSundayDSTOn;\n  //console.log(new Date(year, daylightOnMonth, 1).getDay());\n  for(let i = 1; i < 8; i++){\n    var day = new Date(year, daylightOnMonth, i).getDay();\n    //console.log(day);\n    if(day === 0) {\n      firstSundayDSTOn = i;\n    }\n  }\n  secondSundayDSTOn = firstSundayDSTOn + 7;\n  let daylightSavingDate = new Date(year, daylightOnMonth, secondSundayDSTOn);\n  console.log(daylightSavingDate);\n\n  //first sunday in november\n  let daylightOffMonth = 10;\n  let firstSundayDSTOff;\n  for(let i = 1; i < 8; i++){\n    var day = new Date(year, daylightOnMonth, i).getDay();\n    //console.log(day);\n    if(day === 0) {\n      firstSundayDSTOff = i;\n    }\n  }\n  let daylightSavingEndDate = new Date(year, daylightOnMonth, firstSundayDSTOff);\n  console.log(daylightSavingEndDate);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          {currentTimeEastern}\n        </p>\n        <p>\n          {currentTimeCentral}\n        </p>\n        <p>\n          {currentTimePacific}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}